{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/05/11/hello-world/"},{"title":"blog","text":"title: Hexo를 이용해서 github.io blog 만들기date: 2020-05-11 06:11:50tags: Hexo를 이용해서 github.io blog 만들기1234Hexo는 무엇인가요? (참조 https://hexo.io/ko/docs/)Hexo는 빠르고 간단하고 파워풀한 블로그 프레임워크입니다. Markdown(또는 다른 언어)을 사용하여 포스트를 작성하면 Hexo는 금세 멋진 테마를 가미해서 정적인 파일을 생성해 드립니다. 구름 사이트 접속 이후 계정을 생성한다. (참조 https://ide.goorm.io/?plan=ZnJlZQ== ) 새로운 컨테이너를 생성클릭한다. 이름, 설명을 등록하고 소프트웨어 스택은 Node.js를 선택한다. 컨테이서 생성을 클릭한다. 새로운 컨테이너가 생성되면 새로운 구름IDE의 페이지가 실행된다. 구름IDE의 좌측은 폴더가 아랫쪽은 터미널이 실행된다. 구름IDE의 터미널에 Hexo를 설치하기 위해서 아래의 명령을 실행한다. -g global 1npm install hexo-cli -g Hexo를 초기화한다. hexoblog는 구름IDE의 좌측에 생성되는 폴더이름이다. 1hexo init hexoblog 현재 디렉토리 확인 이후 4번에서 생성한 폴더로 이동한다. 1234root@goorm:/workspace/blog# pwd/workspace/blogroot@goorm:/workspace/blog# cd hexoblog/root@goorm:/workspace/blog/hexoblog# 터미널에 npm install을 명령어를 실행한다. 1npm install themes를 설치한다. (참고 https://github.com/ppoffice/hexo-theme-icarus)git clone을 복사한다. https://github.com/ppoffice/hexo-theme-icarus.git 구름IDE의 터미널에 복사한 clone 정보에서 “.git”를 삭제하고 hexo-theme-icarus도 hexoblog로 이름을 변경한다. clonenpm install ``` 128. 좌측 폴더에서 hexoblog/themes/_config.yml의 파일을 열고 Extension으로 이동해서 theme의 landscape를 hexoblog로 변경한다. theme: hexoblog 129. hexo server의 port를 open한다. port 확인은 프로젝트 -&gt; 실행 URL과 포트에서 확인 가능 root@goorm:/workspace/blog/hexoblog/themes# hexo server -p 3000```","link":"/2020/05/13/blog/"},{"title":"github pages 활용하기","text":"새로운 Repositories를 생성한다. Repositories의 이름은 URL을 생성하는 기준이다. 사용자ID.github.io를 추천한다. (참조 csbcp.github.io) github의 url을 복사하고 _config.yml의 # Deployment로 이동한다. type, repo, branch를 등록한다. 1234deploy: type: git repo: https://github.com/csbcp/csbcp.github.io branch: master github에 deploy 이전에 필요한 패키지를 설치한다. 1npm install hexo-deployer-git --save github에 파일을 올릴때에는 정적파일 형태로 deploy를 해야하므로 generate를 실행한다. 1hexo generate deploy에 필요한 정보를 설정한다. 123git config --global user.email &quot;charles&quot; global user.name &quot;charles&quot; git config --global user.email &quot;charles@uangel.com&quot; github에 deploy 한다. 1root@goorm:/workspace/blog/hexoblog/themes# hexo deploy","link":"/2020/05/11/hexo-using/"},{"title":"jasper-studio","text":"title: “Jasper Studio 메뉴얼 (v0.1)”date: 2020-05-11 07:15:24tags: Jasper Studio1. Jasper Studio 설치JasperSoft 사이트에 접속해서 파일을 다운로드한다. 12$ 기본 설정 방법JasperSoft Download (https://community.jaspersoft.com/project/jaspersoft-studio/releases) 2. Oracle 설정JasperSoft의 좌측메뉴에서 Data Adapters의 마우스 오른쪽을 클릭해서 Create Data Adapters를 클릭한다. Database JDBC Connect을 선택하고 Next를 클릭한다. Oracle 접속정보를 등록한다. JDBC Url, Username, Password는 접속하는 사이트에 맞게 설정하고 하단에 Test를 클릭한다. 123456$ 오라클 기본 설정 정보Name:Charles DBJDBC Driver:oracle.jdbc.driver.OracleDriverJDBC Url:jdbc:oracle:thin:@//127.0.0.1:1521/CharlesUsername:charlesPassword:xxxxxx Data Adapter Wizard 하단의 Driver Classpath로 이동하고 Add를 클릭해서 Oracle JDBC Driver 파일의 위치를 설정한다. Oracle JDBC Driver Download Successful 팝업 메시지가 보이면 Finish를 클릭해서 DB 접속을 마무리한다. 3. Server 접속 정보 설정JasperSoft의 좌측메뉴에서 Servers의 마우스 오른쪽을 클릭해서 Create JasperReports Server Connection를 클릭한다. JasperReports Server 접속정보를 등록한다. Name, URL, User, Password는 접속하는 서버의 정보를 입력하고 하단에 Test를 클릭한다. 12345$ JasperReports Server 기본 설정 정보Name:JasperReports Server ProURL:http://localhost:8080/jasperserver-pro/Username:charlesPassword:xxxxxx Successful 팝업 메시지가 보이면 Finish를 클릭해서 jasperReports Server 설정을 마무리한다. 4. Repository 생성Source를 저장 할 폴더를 생성한다. 프로젝트를 수행하는 경우 소스 관리를 위해서 git에 Repositories를 생성해서 진행하는것을 권고한다. 123$ Source 폴더 생성$ git에 Repositories 생성$ Source 폴더에서 git clone 수행 Source Import 진행 1234JasperSoft -&gt; File -&gt; Import 클릭General -&gt; Existing Project into Workspace 선택 이후 Next 클릭Browe..를 클릭해서 생성한 Source 폴더 연결Finish 클릭","link":"/2020/05/12/jasper-studio/"},{"title":"jasper-invoice","text":"title: jasper-coffeedate: 2020-05-12 07:23:53tags: Jasper Report Jasper Report 실습JasperSoft studio를 이용해서 간단한 샘플 보고서를 만든다. 12$ file -&gt; new -&gt; jasper report -&gt; Invoice를 선택 이후 next 클릭$ 새로운 보고서를 저장할 폴더 및 파일 이름 입력 이후 next 클릭 보고서는 기본적으로 Title, Column Header, Detail 1, Last Page Footer의 Band로 구성된다. 1234$ Title : 보고서의 첫페이지에 출력되는 밴드이다. (예:회사이름, 회사주소, 출력일자, etc)$ Column Header : Detail 1에 표시되는 데이터의 이름을 밴드이다. (예:고객명, 고객정보, 고객주소, etc)$ Detail 1 : 데이터를 출력하는 밴드이다. (예: 철수, 남자, 대한민군, etc)$ Last Page Footer : 보고서의 가장 마지막에 출력되는 밴드이다. (예: 안내문구, 보고서페이지, etc) 기본적인 Title 구성 한 후 보고서에 출력할 데이터를 DB에서 추출한다. 123$ 우측에 Dataset_and_Query_Dialog 아이콘을 클릭한다.$ 데이터를 추출한 SQL Query를 작성한다. $ 별도의 SQL Tool을 이용하여 1차 Query에 대한 검증을 완료하고 진행하는것을 추천한다. Dataset and Query Diaglog를 이용하여 데이터 추출하기 12345$ 1. 접속할 DB를 선택한다.$ 2. SQL Query를 작성한다.$ 3. Read Fields 버튼을 클릭한다.$ 4. 불필요한 필드를 삭제하고 순서를 조정한다.$ 5. Parameters 탭을 클릭한다 Query Parameters 추가하기 1234$ 좌측에 ```add``` 버튼을 클릭한다.$ 추가된 Parameter1을 더블클릭하면 파라메터 설정 팝업이 화면에 표시된다.$ Parameter Name을 포함하여 필요한 값을 선택 또는 입력하고 ```ok``` 버튼을 클릭한다.$ Data preview를 제공하고 있으며 ```Refresh Preview Data``` 버튼을 클릭하면 데이터를 화면에 출력한다. 보고서 데이터 출력하기 12345$ 1. Dataset and Query Diaglog에서 추출한 컬럼에 대한 정보가 표시된다.$ 2. 보고서 화면에 추가할 수 있는 Object가 표시된다.$ 3. 보고서 화면에서 Object를 선택하면 해당 Object에 대한 정보가 표시된다.$ 4. 보고서 디자인 과정 또는 마무리 이후에 보고서의 데이터를 확인 할 수 있는 Preview를 제공한다.$ 보고서의 모든 정보는 xml로 저장되면 필요하다면 직접 Source를 수정할 수 있다. 보고서 미리보기 12$ 1. 하단에 Preview화면은 좌측에 파라메터를 입력하는 화면, 우측에 보고서가 화면으로 구성되어있다.$ 2. 파라메터를 입력하고 위쪽에 실행버튼을 클릭하면 보고서가 화면에 출력된다.","link":"/2020/05/14/jasper-invoice/"},{"title":"python_ch_1","text":"title: 가상 환경 설정date: 2020-05-13 17:11:50tags: Python 개발 가상 환경 설정 테스트 코드개발 환경 설정 (MAC)일단 Python을 이용해서 개발을 진행하기 위해서 필요한 파일을 설치하겠습니다.총 5개의 파트로 구분했으며 설치는 별로 어렵지 않습니다.개발 환경은 MAC으로 진행하겠습니다. 123451. Python 설치2. Editor 설치 (Visual Studio Code)3. Virtual Environment 설정 (Venv)4. editor plug-in 설치5. test package 설치 1. Python 설치1) 우선 Python 설치파일을 다운로드하세요.2) 다운로드 한 패키지 파일을 클릭해서 설치하세요. 설치과정은 어렵지 않아서 패스.3) 정상적으로 설치가 잘 되었는지 확인하겠습니다.4) 우선 Terminal을 실행하고 Prompt에 python3을 입력하고 실행하세요. 아래와 같은 메시지가 화면에 보이면 OK. 1234Python 3.7.3 (default, Apr 7 2020, 14:06:47)[Clang 11.0.3 (clang-1103.0.32.59)] on darwinType &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&gt;&gt;&gt; 5) 참고로 python을 입력하고 실행하면 2.xx 버전이 실행된다. MAC은 기본적으로 2.xx가 설치되어 있다. 2. Editor 설치 (Visual Studio Code)1) Python은 개발은 본인이 선호하는 툴을 사용해도 괜찮고 원하는 Editor를 사용해도 무방합니다. (Atom, PyCharm…)2) Visual Studio Code 설치 파일 다운로드하세요.3) 다운로드 한 패키지 파일을 설치한다. 설치과정이 어렵지 않아서 추가 설명을 하지 않는다.4) 정상적으로 설치가 되었다면 Terminal을 실행하고 Prompt에 code를 입력하면 Visual Studio Code가 실행된다 3. Virtual Environment 설정 (Venv)12345678910* 가상환경을 이용하는 이유는 사이트마다 버전을 다르게 개발했을 경우 사이트의 유지보수가 힘들기 때문에 가능하면 가상환경을 구축해서 필요한 패키지를 설치하고 개발하는것을 권고한다.* 터미널을 실행하고 작업 디렉토리를 생성하고 아래의 명령어를 실행한다. 참고로 현재 위치에서 만들어진다. [참고](https://docs.python.org/3/tutorial/venv.html?highlight=virtual &quot;Python Doc&quot;) $ python -m venu p_study* 생성된 디렉토리를 확인하고 아래 명령어를 이용해서 활성화한다.* $ source ./bin/activate* Prompt가 가상환경을 바뀐것을 확인할 수 있다. &quot;$ (p_study) &quot; 작업 과정에서 오류가 발생한 경우 생성된 폴더를 삭제하고 가상환경을 재실행한다.* 가상환경이 Active 된 이후 Prompt에 code를 입력해서 Editor를 실행한다. 4. editor plug-in 설치12345678910* 가상환경이 설치된 위치에서 pin list를 실행하면 현재 설치된 pip 목록을 확인할 수 있다. 가상환경을 구축해서 필요한 패키지를 설치하고 개발하는것을 권고한다.* 터미널을 실행하고 작업 디렉토리를 생성하고 아래의 명령어를 실행한다. 참고로 현재 위치에서 만들어진다. [참고](https://docs.python.org/3/tutorial/venv.html?highlight=virtual &quot;Python Doc&quot;) $ python -m venu p_study* 생성된 디렉토리를 확인하고 아래 명령어를 이용해서 활성화한다.* $ source ./bin/activate* Prompt가 가상환경을 바뀐것을 확인할 수 있다. &quot;$ (p_study) &quot; 작업 과정에서 오류가 발생한 경우 생성된 폴더를 삭제하고 가상환경을 재실행한다.* 가상환경이 Active 된 이후 Prompt에 code를 입력해서 Editor를 실행한다. To be continued… pip install pendulumpip install pytest","link":"/2020/05/14/python_ch_1/"},{"title":"Jasper Report 서버에 올리기","text":"Jasper Report 파일 업로드JasperSoft studio를 이용해서 간단한 샘플 보고서를 만든다. 12$ file -&gt; new -&gt; jasper report -&gt; Invoice를 선택 이후 next 클릭$ 새로운 보고서를 저장할 폴더 및 파일 이름 입력 이후 next 클릭","link":"/2020/05/14/jasper-upload/"}],"tags":[{"name":"Jasper","slug":"Jasper","link":"/tags/Jasper/"},{"name":"Report","slug":"Report","link":"/tags/Report/"}],"categories":[{"name":"JasperSoft","slug":"JasperSoft","link":"/categories/JasperSoft/"},{"name":"Jasper Report 서버에 올리기","slug":"JasperSoft/Jasper-Report-서버에-올리기","link":"/categories/JasperSoft/Jasper-Report-%EC%84%9C%EB%B2%84%EC%97%90-%EC%98%AC%EB%A6%AC%EA%B8%B0/"}]}